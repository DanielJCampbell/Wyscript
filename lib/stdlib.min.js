var $debug,$newMap,$newSet,println;function str(b){if(typeof b==="object"&&typeof JSON!=="undefined")return JSON.stringify(b);return b+""}println=function(){return typeof console!=="undefined"&&typeof console.log==="function"?function(b){console.log(b)}:function(){}}();function $clone(b){var d,a,c;d=b;if(typeof b==="object")if(b instanceof Array){d=[];a=0;for(c=b.length;a<c;++a)d[a]=$clone(b[a])}else{d={};for(a in b)d[a]=$clone(b[a])}return d}function $equals(b,d,a){var c,e,f;if(typeof b!=="object"||typeof d!=="object")return b===d;try{return JSON.stringify(b)===JSON.stringify(d)}catch(g){}a||(a=$newMap());if(c=a.get(b)){if($indexOf(c,d)>-1)return true;c.push(d)}else a.put(b,[d]);c=e=0;if(b instanceof Array){if(!(d instanceof Array)||b.length!==d.length)return false;for(f=b.length;c<f;++c)if(!$equals(b[c],d[c],a))return false;return true}for(f in b){if(!$equals(b[f],d[f],a))return false;c+=1}for(f in d)e+=1;if(c!==e)return false;return true}function $in(b,d){return $indexOf(b,d)>-1}function $has(b,d){return Object.prototype.hasOwnProperty.call(b,d)}function $indexOf(b,d){var a,c;if((c=Array.prototype.indexOf)&&(a=c.call(b,d))>-1)return a;a=0;for(c=b.length;a<c;++a)if($equals(d,this[a]))return a;return-1}function $intersect(b,d){var a,c,e,f;a=new b.constructor;c=0;for(e=b.length;c<e;++c){f=b[c];$in(d,f)&&a.push($clone(f))}return a}function $subset(b,d,a){var c,e;c=0;for(e=b.length;c<e;++c)if(!$in(d,b[c]))return false;return a?true:!$equals(b,d)}$debug=function(){var b;return typeof console!=="undefined"&&(typeof(b=console.debug)==="function"||typeof(b=console.log)==="function")?function(d){b.call(console,d)}:function(){}}();function $assert(b){if(b!==true)throw"failed assertion"}$newSet=function(){function b(a){var c,e;c=0;for(e=a.length;c<e;++c)this.push(a[c])}var d;d=b.prototype;d.push=function(a){if(!$in(this.values,a)){this.values.push(a);this.length+=1}}d.concat=function(a){var c,e,f;c=$clone(a);e=0;for(f=a.length;e<f;++e)c.push(a[e]);return c}return function(){return new b(arguments)}}();$newMap=function(){function b(a,c){this.keys=$clone(a)||[];this.values=$clone(c)||[]}var d;d=b.prototype;d.put=function(a,c){var e;e=$indexOf(this.keys,a);if(e>-1){this.keys[e]=a;this.values[e]=c}this.keys.push(a);this.values.push(c)}d.get=function(a){a=$indexOf(this.keys,a);if(a>-1)return this.values[a];return null}d.remove=function(a){a=$indexOf(this.keys,a);if(a>-1){this.keys.splice(a,1);this.values.splice(a,1)}}return function(a,c){return new b(a,c)}}()