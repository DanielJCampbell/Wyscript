var $debug,$newMap,$newSet;function $clone(b){var a,c,d;a=b;if(typeof b==="object")if(b instanceof Array){a=[];c=0;for(d=b.length;c<d;++c)a[c]=$clone(b[c])}else{a={};for(c in b)a[c]=$clone(b[c])}return a}function $equals(b,a,c){var d,e,f;if(typeof b!=="object"||typeof a!=="object")return b===a;try{return JSON.stringify(b)===JSON.stringify(a)}catch(g){}c||(c=$newMap());if(d=c.get(b)){if($indexOf(d,a)>-1)return true;d.push(a)}else c.put(b,[a]);d=e=0;if(b instanceof Array){if(!(a instanceof Array)||b.length!==a.length)return false;for(f=b.length;d<f;++d)if(!$equals(b[d],a[d],c))return false;return true}for(f in b){if(!$equals(b[f],a[f],c))return false;d+=1}for(f in a)e+=1;if(d!==e)return false;return true}function $in(b,a){return $indexOf(b,a)>-1}function $has(b,a){return Object.prototype.hasOwnProperty.call(b,a)}function $indexOf(b,a){var c,d;if((d=Array.prototype.indexOf)&&(c=d.call(b,a))>-1)return c;c=0;for(d=b.length;c<d;++c)if($equals(a,this[c]))return c;return-1}function $intersect(b,a){var c,d,e,f;c=new b.constructor;d=0;for(e=b.length;d<e;++d){f=b[d];$in(a,f)&&c.push($clone(f))}return c}function $subset(b,a,c){var d,e;d=0;for(e=b.length;d<e;++d)if(!$in(a,b[d]))return false;return c?true:!$equals(b,a)}$debug=function(){var b;return typeof console!=="undefined"&&(typeof(b=console.debug)==="function"||typeof(b=console.log)==="function")?function(a){b.call(console,a)}:function(){}}();function $assert(b){if(b!==true)throw"failed assertion";}$newSet=function(){function b(a){var c,d;c=0;for(d=a.length;c<d;++c)this.push(a[c])}b.prototype.push=function(a){if(!$in(this.values,a)){this.values.push(a);this.length+=1}};b.prototype.concat=function(a){var c,d,e;c=$clone(a);d=0;for(e=a.length;d<e;++d)c.push(a[d]);return c};return function(){return new b(arguments)}}();$newMap=function(){function b(a,c){this.keys=$clone(a)||[];this.values=$clone(c)||[]}b.prototype.put=function(a,c){var d;d=$indexOf(this.keys,a);if(d>-1){this.keys[d]=a;this.values[d]=c}this.keys.push(a);this.values.push(c)};b.prototype.get=function(a){a=$indexOf(this.keys,a);if(a>-1)return this.values[a];return null};b.prototype.remove=function(a){a=$indexOf(this.keys,a);if(a>-1){this.keys.splice(a,1);this.values.splice(a,1)}};return function(a,c){return new b(a,c)}}()