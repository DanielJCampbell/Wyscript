package wyscript.error;

import java.util.List;

import wyscript.Main;
import wyscript.util.SyntaxError;
import static wyscript.util.SyntaxError.outputSourceError;

/**
 * Utility class that takes all errors generated by the lexer and prints
 * appropriate messages to the user.
 *
 * @author Daniel Campbell
 *
 */
public class LexerErrorHandler {

	public static void handle(List<LexerErrorData> errors) {
		for (LexerErrorData data : errors) {

			String msg = null;

			switch (data.type()) {

			case INVALID_CHARACTER:
				outputSourceError(Main.errout, "Invalid character in file: " + data.found(), data.filename(), data.pos(), data.pos());
				break;

			case INVALID_ESCAPE:
				msg = String.format("Invalid escape character: '\\%c'\nOnly escape charracters '\\n' and '\\t' allowed.", data.found());
				outputSourceError(Main.errout, msg, data.filename(), data.pos(), data.pos());
				break;

			case INVALID_OP:
				outputSourceError(Main.errout, "Invalid operator in file: " + data.found(), data.filename(), data.pos(), data.pos());
				break;

			case INVALID_WHITESPACE:
				msg = String.format("Invalid whitespace: '\\%c'\nOnly '\\t', ' ', '\\n' and \"\\r\\n\" allowed.", data.found());
				outputSourceError(Main.errout, msg, data.filename(), data.pos(), data.pos());
				break;

			case MISSING_CHAR_END:
				outputSourceError(Main.errout, "Error, character literal must end with '", data.filename(), data.pos(), data.pos());
				break;

			case MISSING_STRING_END:
				outputSourceError(Main.errout, "Error, missing string literal closing \"", data.filename(), data.pos(), data.pos());
				break;
			}
			//Dead code
			throw new SyntaxError("syntax error", data.filename(), data.pos(), data.pos());
		}
	}
}